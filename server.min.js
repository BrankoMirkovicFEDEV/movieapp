const express=require("express"),cors=require("cors"),mongoose=require("mongoose"),UserModel=require("./models/user"),jwt=require("jsonwebtoken"),app=express(),port=5e3;function generateToken(e){let s={userId:e._id};return jwt.sign(s,"tajnaTajnaTajna",{expiresIn:"24h"})}mongoose.connect("mongodb://127.0.0.1:27017/test",{useNewUrlParser:!0,useUnifiedTopology:!0});const db=mongoose.connection;db.on("error",console.error.bind(console,"Connection error:")),db.once("open",()=>{console.log("Connected to MongoDB database")});const passwordRegex=/^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{6,}$/,usernameRegex=/^[a-zA-Z0-9._-]{3,}$/;app.use(cors({origin:"*",methods:"GET,HEAD,PUT,PATCH,POST,DELETE",credentials:!0})),app.use(express.json()),app.post("/api/signup",async(e,s)=>{let{username:o,password:n,email:t}=e.body,a=await UserModel.findOne({username:o});if(a)return s.status(400).json({message:"Username allready exists"});if(!usernameRegex.test(o))return s.status(400).json({message:"Username is not in the right format"});if(!passwordRegex.test(n))return s.status(400).json({message:"Password is not in the right format"});let r=new UserModel({username:o,password:n,email:t});try{await r.save(),s.status(200).json({message:"Registration successfull"})}catch(i){s.status(500).json({message:"Error during registration"})}}),app.post("/api/login",async(e,s)=>{let{username:o,password:n}=e.body,t=await UserModel.findOne({username:o,password:n});if(t){let a=generateToken(t);s.status(200).json({message:"Login successfull",token:a})}else s.status(401).json({message:"Wrong email or password"})}),app.get("/api/check-login",(e,s)=>{let o=e.headers.authorization;if(!o)return s.status(401).json({message:"You're not logged in!"});jwt.verify(o,"tajnaTajnaTajna",(e,o)=>{if(e)return s.status(401).json({message:"You're not logged in!"});s.status(200).json({message:"You're logged in!"})})}),app.post("/api/send-message",(e,s)=>{let{name:o,email:n,message:t}=e.body;s.status(200).json({message:"Message sent"})}),app.get("/",(e,s)=>{s.send("Welcome to my server!")}),app.listen(5e3,()=>{console.log("Server works on port: 5000")});